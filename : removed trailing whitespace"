[1mdiff --git a/app/channels/application_cable/connection.rb b/app/channels/application_cable/connection.rb[m
[1mindex 51b8d03..b78f854 100644[m
[1m--- a/app/channels/application_cable/connection.rb[m
[1m+++ b/app/channels/application_cable/connection.rb[m
[36m@@ -1,18 +1,18 @@[m
 module ApplicationCable[m
   class Connection < ActionCable::Connection::Base[m
     identified_by :current_user[m
[31m-    [m
[32m+[m
     def connect[m
       self.current_user = find_verified_user[m
       Rails.logger.info "ActionCable: User #{current_user.id} connected"[m
     end[m
[31m-    [m
[32m+[m
     def disconnect[m
       Rails.logger.info "ActionCable: User #{current_user&.id} disconnected"[m
     end[m
[31m-    [m
[32m+[m
     private[m
[31m-    [m
[32m+[m
     def find_verified_user[m
       # Try to find user from session (for web connections)[m
       if session.present? && session[:user_id][m
[36m@@ -20,14 +20,14 @@[m [mmodule ApplicationCable[m
           return session_user[m
         end[m
       end[m
[31m-      [m
[32m+[m
       # Try to find user from cookies (for Devise)[m
       if cookies.signed[:user_id][m
         if user = User.find_by(id: cookies.signed[:user_id])[m
           return user[m
         end[m
       end[m
[31m-      [m
[32m+[m
       # Try to find user from Devise warden session[m
       if cookies.encrypted.present?[m
         devise_session = cookies.encrypted["_ema_trading_bot_session"][m
[36m@@ -38,18 +38,18 @@[m [mmodule ApplicationCable[m
           end[m
         end[m
       end[m
[31m-      [m
[32m+[m
       # For development/testing, allow connection without authentication[m
       if Rails.env.development? || Rails.env.test?[m
         Rails.logger.warn "ActionCable: No authenticated user found, using first user for development"[m
         return User.first[m
       end[m
[31m-      [m
[32m+[m
       # Reject connection if no user found[m
       Rails.logger.error "ActionCable: No authenticated user found, rejecting connection"[m
       reject_unauthorized_connection[m
     end[m
[31m-    [m
[32m+[m
     def session[m
       @session ||= begin[m
         session_key = Rails.application.config.session_options[:key][m
